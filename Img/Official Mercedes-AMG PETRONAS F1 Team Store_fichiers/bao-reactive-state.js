window.BAO.ReactiveState=class{constructor(initialState={}){this._internalState={},Object.entries(initialState).forEach(([key,initialValue])=>this._makeKeyReactive(key,initialValue))}has(key){return this._checkIfKeyInState(key,!1)}add(key,initialValue){this._makeKeyReactive(key,initialValue)}subscribe(key,fnc){if(!this._checkIfKeyInState(key))throw new Error(`${key} doesn't exist so can't be subscribed to.`);const privateKey=getPrivateKey(key);this._internalState[privateKey].listeners.push(fnc)}unsubscribe(key,fnc){if(!this._checkIfKeyInState(key))return;const privateKey=getPrivateKey(key);this._internalState[privateKey].listeners=this._internalState[privateKey].listeners.filter(fn=>fn!==fnc)}_notify(key,val,{prevVal}){if(!this._checkIfKeyInState(key))return;const privateKey=getPrivateKey(key);this._internalState[privateKey].listeners.forEach(fn=>fn(val,{prevVal}))}_makeKeyReactive(key,initialValue){const _this=this,privateKey=getPrivateKey(key);return this._internalState[privateKey]={value:initialValue,listeners:[]},Object.defineProperty(this,key,{get(){return _this._internalState[privateKey].value},set(val){const prevVal=_this._internalState[privateKey].value;_this._internalState[privateKey].value=val,_this._notify(key,val,{prevVal})}}),this._internalState}_checkIfKeyInState(key,throwError=!0){const keyInState=getPrivateKey(key)in this._internalState;if(keyInState===!1&&throwError)throw new Error(`${key} doesn't exist in ObservableState`);return keyInState}};function getPrivateKey(key){return`_${key}`}
//# sourceMappingURL=/cdn/shop/t/50/assets/bao-reactive-state.js.map?v=5022987548164089931707734703
